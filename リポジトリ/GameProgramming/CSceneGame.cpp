#include "CSceneGame.h"
//
#include "CCamera.h"
//
#include "CText.h"
#include "CRes.h"
#include "CKey.h"
#include "CModelX.h"
#include "CMaterial.h"
#include "glut.h"
#include <Windows.h>

CMatrix Matrix;

CSceneGame::~CSceneGame() {

}


void CSceneGame::Init() {
	//3Dモデルファイルの読み込み
	CRes::sModelX.Load(MODEL_FILE);
	//テキストフォントの読み込みと設定
	CText::mFont.Load("FontG.tga");
	CText::mFont.SetRowCol(1, 4096 / 64);
}


void CSceneGame::Update() {
	//最初のアニメーションの現在時刻を45にする
	//CRes::sModelX.mAnimationSet[0]->mTime = 0;
	CRes::sModelX.mAnimationSet[0]->mTime += 1.0f;
	CRes::sModelX.mAnimationSet[0]->mTime =
		(int)CRes::sModelX.mAnimationSet[0]->mTime %
		(int)(CRes::sModelX.mAnimationSet[0]->mMaxTime + 1);
	//最初のアニメーションの重みを1.0(100%)にする
	CRes::sModelX.mAnimationSet[0]->mWeight = 1.0f;
	//フレームの変換行列をアニメーションで更新する
	CRes::sModelX.AnimateFrame();
	//フレームの合成行列を計算する
	CRes::sModelX.mFrame[0]->AnimateCombined(&Matrix);
	//カメラのパラメータを作成する
	CVector e, c, u;//視点、注視点、上方向
	//視点を求める
	e = CVector(1.0f,2.0f,10.0f);
	//注視点を求める
	c = CVector();
	//上方向を求める
	u = CVector(0.0f, 1.0f, 0.0f);

	//カメラの設定
	//Camera3D(e.mX, e.mY, e.mZ, c.mX, c.mY, c.mZ, u.mX, u.mY, u.mZ);
	Camera.Set(e, c, u);
	Camera.Render();

	//回転
	if (CKey::Push('K')){
		Matrix = Matrix*CMatrix().RotateX(1);
	}
	if (CKey::Push('L')){
		Matrix = Matrix*CMatrix().RotateY(1);
	}
	if (CKey::Push('I')){
		Matrix = Matrix*CMatrix().RotateX(-1);
	}
	if (CKey::Push('J')){
		Matrix = Matrix*CMatrix().RotateY(-1);
	}
	//行列設定
	glMultMatrixf(Matrix.mF);
	//頂点にアニメーションを適用する
	CRes::sModelX.AnimateVertex();
	//モデル描画
	CRes::sModelX.Render();
	//テクスチャテスト
	CRes::sModelX.mMaterial[0]->mTexture.DrawImage(-5, 5, -5, 5, 128, 128, 0);


	//2D描画開始
	Start2D(0, 800, 0, 600);

	CText::DrawString("3D PROGRAMMING", 20, 20, 10, 12);

	//2D描画終了
	End2D();

	return;

}

